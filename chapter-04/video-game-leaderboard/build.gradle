plugins {
  id 'application'

  // https://plugins.gradle.org/plugin/com.github.sherter.google-java-format
  id 'com.github.sherter.google-java-format' version '0.9'

  // https://plugins.gradle.org/plugin/net.ltgt.errorprone
  id 'net.ltgt.errorprone' version '2.0.1'

  id 'maven-publish'
}

ext {
  // https://search.maven.org/artifact/org.apache.kafka/kafka-streams
  kafkaVersion = '2.8.0'
}

application {
  mainClassName = 'com.magicalpipelines.App'
}

repositories {
  mavenLocal()
  mavenCentral()
}

dependencies {
  implementation "org.apache.kafka:kafka-streams:${kafkaVersion}"

  // logging
  implementation 'org.slf4j:slf4j-api:1.7.36'
  implementation 'ch.qos.logback:logback-classic:1.2.11'

  // required for custom serdes
  implementation 'com.google.code.gson:gson:2.9.0'

  // required for interactive queries (server)
  implementation 'io.javalin:javalin:3.13.13'
  // required for interactive queries (client)
  implementation 'com.squareup.okhttp3:okhttp:4.9.3'

  errorprone 'com.google.errorprone:error_prone_core:2.3.2'
  errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'

}

tasks.withType(JavaCompile).configureEach { javaCompile ->
  javaCompile.dependsOn 'googleJavaFormat'
  options.compilerArgs << "-Xlint:deprecation"
  options.encoding = 'UTF-8'
  options.errorprone {
    disableWarningsInGeneratedCode = true
    excludedPaths = '.*/build/generated/.*'
  }
}

task runFirst(type: JavaExec) {
  main = application.mainClassName
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = [
    'host': 'localhost',
    'port': '7777',
    'stateDir': '/tmp/kafka-streams'
  ]
}

task runSecond(type: JavaExec) {
  main = application.mainClassName
  classpath = sourceSets.main.runtimeClasspath
  systemProperties = [
    'host': 'localhost',
    'port': '7100',
    'stateDir': '/tmp/kafka-streams2'
  ]
}

run.dependsOn runFirst

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            pom{
              name = 'videogame-leader-board'
              groupId = 'com.magicalpipelines'
              artifactId = 'videogame-leader-board'
              version = '1.0.0-SNAPSHOT'
              properties = [
                    "java.version": "1.11",
                    "avro.version": "1.11.0",
                    "kafka.version": "2.8.0",
                    "project.build.sourceEncoding": "UTF-8"
                ]
            }
            from components.java
        }
    }
}
